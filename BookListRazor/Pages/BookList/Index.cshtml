@page
@model BoolListRazor.Pages.BookList.IndexModel
@{
}

<div class="container row p-0 m-0">
    <div class="col-9">
        <h2 class="text-info">Book List</h2>
    </div>
    <div class="col-3">
        @*Nos redirigimos a la pagina de upsert || tambien solo create*@
        <a class="btn btn-info form-control" asp-page="Upsert">Create New Book</a>
    </div>

    <div class="col-12 border p-3 mt-3">
        <form method="post">
            @if (Model.Books.Count() > 0)
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            @*FirstOrDefault es un metodo de IEnumerables que retorna el primer elemento de la
                                secuencia o un valor por default si no hay ningun elemento ahi*@
                            @*En este caso se llama el primer elemento de la secuencia y se imprime*@
                            <label asp-for="Books.FirstOrDefault().Name"></label>
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(m=>m.Books.FirstOrDefault().Autor)*@
                            <label asp-for="Books.FirstOrDefault().Autor"></label>
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(m=>m.Books.FirstOrDefault().Autor)*@
                            <label asp-for="Books.FirstOrDefault().ISBN"></label>
                        </th>
                        <th>

                        </th>
                    </tr>
                    @foreach (var item in Model.Books)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.Autor)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.ISBN)
                            </td>
                            <td>
                                @*Se coloca que al darle click despliegue un mensaje de seguridad, despues le colocamos un handler
                                    manejara la accion al darle click, se llamara Delete
                                    mandamos el id del elemento para obtenerlo en el backend y eliminarlo
                                *@
                                <button asp-page-handler="Delete" asp-route-id="@item.Id" onclick="return confirm('Are you sure you want to delete?')" class="btn btn-danger btn-sm text-white">Delete</button>
                                @*A la hora de dat edit, se deberia de pasar el id del libro para ir a la pagina de editar
                                    para esto lo que hacemos es utilizar el tag helper asp-route-id para que se mande por parametro en el url*@
                                <a asp-page="Edit" asp-route-id="@item.Id" class="btn btn-success btn-sm">Edit</a>
                            </td>
                        </tr>
                    }
                </table>
            }
            else
            {
                <p class="text-info">NO BOOKS AVAILABLE</p>
            }
        </form>
    </div>


    @*Seccion que sera importada utilizando Javascript*@
    <div class="col-12" style="text-align:center">
        <br />
        <span class="h3 text-info">OR</span>
        <br /><br />
    </div>
    <div class="col-12 border p-3">

        <table id="DT_load" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>Name</th>
                    <th> Author</th>
                    <th> ISBN</th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>

</div>

@section Scripts{
      <script src="~/js/bookList.js"></script>
 }
